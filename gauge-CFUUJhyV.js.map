{"version":3,"file":"gauge-CFUUJhyV.js","sources":["../src/plugins/gauge.js"],"sourcesContent":["export default hook.define({\n  name: 'Gauge',\n  description: 'Apply gauge',\n  contents: [\n    {\n      type: 'config',\n      meta: ['启用收集条', callback]\n    }\n  ]\n});\nconst { status, stat, app } = hook;\n/**\n * @param {HTMLInputElement} checkbox\n * @param {HTMLDivElement} container\n */\nfunction callback(checkbox, _container) {\n  checkbox.addEventListener('change', () => {\n    if (checkbox.checked) {\n      hook.now.set('gauge', calcGauge);\n      hook.after.set('gauge', drawGauge);\n    } else {\n      hook.now.delete('gauge');\n      hook.after.delete('gauge');\n    }\n  });\n  status.reg('enableGauge', checkbox);\n}\n/** @type {[ChartPGS,...number[]]} */\nconst flags = [null, 0, 0, 0, 0, 0, 0, 0];\nlet factor = 0;\nlet lastTime = 0;\nconst gauge = {\n  value: 100,\n  delta: -1,\n  speedInit: 0,\n  speed: 0,\n  speed2: 0,\n  factor: 0.5,\n  factor2: Math.SQRT1_2,\n  dead: false,\n  tick(deltaTime) {\n    if (this.dead) return;\n    this.delta = this.speedInit * deltaTime;\n    this.delta += this.speed * (1 - this.factor ** deltaTime);\n    this.delta += this.speed2 * (1 - this.factor2 ** deltaTime);\n    this.value = Math.min(100, this.value + this.delta);\n    this.delta /= deltaTime || Infinity;\n    if (this.value <= 0) this.dead = true;\n    this.speed *= this.factor ** deltaTime;\n    this.speed2 *= this.factor2 ** deltaTime;\n  },\n  reset() {\n    this.value = 100;\n    this.delta = -1;\n    this.speedInit = 0;\n    this.speed = 0;\n    this.speed2 = 0;\n    this.factor = 0.5;\n    this.factor2 = Math.SQRT1_2;\n    this.dead = false;\n  }\n};\nfunction initGauge() {\n  const { chart } = app;\n  gauge.reset();\n  factor = calcGaugeFactor(chart.numOfNotes, stat.level >= 16);\n  gauge.speedInit = -factor * chart.numOfNotes / (app.duration + 0.5);\n  console.log('initGauge');\n  flags[0] = chart;\n  for (let i = 1; i < 8; i++) flags[i] = stat.noteRank[i];\n}\nfunction calcGauge(time) {\n  if (flags[0] !== app.chart) initGauge();\n  if (gauge.dead) {\n    for (const note of app.notes) {\n      if (!note.scored) {\n        note.status = 2;\n        stat.addCombo(2, note.type);\n        note.scored = true;\n      }\n    }\n    hook.time = app.duration;\n    // gauge.reset();\n    return;\n  }\n  const { noteRank } = stat;\n  if (noteRank[6] > flags[6]) gauge.speed2 -= 18;\n  // if (noteRank[7] > flags[7]) gauge.speed += 0;\n  if (noteRank[5] > flags[5]) gauge.speed += factor * (noteRank[5] - flags[5]);\n  if (noteRank[4] > flags[4]) {\n    gauge.speed += factor * (noteRank[4] - flags[4]) * 2;\n  }\n  if (noteRank[1] > flags[1]) gauge.speed += factor * (noteRank[1] - flags[1]);\n  // if (noteRank[3] > flags[3]) gauge.speed += 0;\n  if (noteRank[2] > flags[2]) gauge.speed2 -= 18;\n  for (let i = 1; i < 8; i++) flags[i] = stat.noteRank[i];\n  if (hook.playing) gauge.tick(time - lastTime);\n  lastTime = time;\n}\nfunction drawGauge() {\n  const gaugeValue = gauge.value / 100;\n  const gaugeDelta = gauge.delta;\n  // console.log(gaugeDelta);\n  const gaugeColorR = clip(-gaugeDelta) * 255;\n  const gaugeColorG = clip(1 + gaugeDelta) * 255;\n  const gaugeColorB = clip(1 + gaugeDelta) * 255;\n  const gaugeColor = `rgba(${gaugeColorR},${gaugeColorG},${gaugeColorB},1)`;\n  drawGaugeBar('#3f3b71', 1);\n  drawGaugeBar(gaugeColor, gaugeValue);\n}\nfunction drawGaugeBar(c, p) {\n  const { ctxfg, canvasfg, lineScale } = app;\n  ctxfg.fillStyle = c;\n  ctxfg.fillRect(canvasfg.width / 2 - lineScale * 6 * clip(p), lineScale * 0.2, lineScale * 12 * clip(p), lineScale * 0.2);\n}\nfunction clip(num) {\n  if (num < 0) return 0;\n  if (num > 1) return 1;\n  return num;\n}\nfunction calcGaugeFactor(numOfNotes, isHard) {\n  let speed = 0;\n  if (numOfNotes < 400) speed = 80 / numOfNotes + 0.2;\n  else if (numOfNotes < 600) speed = 32 / numOfNotes + 0.2;\n  else speed = 96 / numOfNotes + 0.08;\n  if (isHard) speed *= 0.8;\n  return speed;\n}\n// hook.gauge = gauge;\n"],"names":["gauge","hook","define","name","description","contents","type","meta","checkbox","_container","addEventListener","checked","now","set","calcGauge","after","drawGauge","delete","status","reg","stat","app","flags","factor","lastTime","value","delta","speedInit","speed","speed2","factor2","Math","SQRT1_2","dead","tick","deltaTime","this","min","reset","time","chart","numOfNotes","isHard","level","calcGaugeFactor","duration","console","log","i","noteRank","initGauge","note","notes","scored","addCombo","playing","gaugeValue","gaugeDelta","gaugeColor","clip","drawGaugeBar","c","p","ctxfg","canvasfg","lineScale","fillStyle","fillRect","width","num"],"mappings":"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"}