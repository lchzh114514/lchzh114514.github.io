{"version":3,"file":"phizone-Dxam3_DL.js","sources":["../src/plugins/phizone.js"],"sourcesContent":["export default hook.define({\n  name: 'PhiZone',\n  description: 'PhiZone API',\n  contents: [\n    {\n      type: 'command',\n      meta: ['/pz', dialogSong]\n    },\n    {\n      type: 'command',\n      meta: ['/pzs', dialogSong]\n    },\n    {\n      type: 'command',\n      meta: ['/pzc', dialogChart]\n    },\n    {\n      type: 'command',\n      meta: ['/random', random]\n    }\n  ]\n});\nconst { sendText, uploader } = hook;\nconst host = 'https://api.phizone.cn';\nconst getSongUrlByUUID = (id = '') => `${host}/songs/${id}/`;\nconst getSongsUrlByIndex = (index = 0) => `${host}/songs/?perpage=1&page=${index}`;\nconst getChartsUrlByIndex = (index = 0) => `${host}/charts/?perpage=1&page=${index}`;\nconst getChartsUrlByUUID = (id = '') => `${host}/songs/${id}/charts/`;\nconst getAssetsUrlByUUID = (id = '') => `${host}/charts/${id}/assets/?perpage=-1`;\nconst getRandomChartUrl = () => `${host}/charts/random/?rangeFormat=0&rangeFormat=1`;\nconst ver = 'PhiZone API v0.9.0';\n// eslint-disable-next-line no-alert\nconst vprompt = str => prompt(`${ver}\\n${str}`);\nconst valert = str => hook.toast(`${ver}\\n${str}`);\nconst msgNetErr = err => {\n  valert(`无法连接至服务器\\n错误代码：${err.message}`);\n  sendText('无法连接至服务器');\n};\nconst msgNoChart = id => {\n  valert(`歌曲ID ${id} 对应的谱面不存在`);\n  sendText(`歌曲ID ${id} 对应的谱面不存在`);\n};\nasync function dialogSong(num) {\n  const id = num || vprompt('请输入歌曲ID');\n  if (id === '' || id == null) { valert('未输入歌曲ID，已取消操作'); return }\n  const data = await querySong(id).catch(msgNetErr);\n  console.log(data);\n  if (!data) return;\n  if (!data.charts.length) { msgNoChart(id); return }\n  await readData(data);\n}\nasync function dialogChart(num) {\n  const id = num || vprompt('请输入谱面ID');\n  if (id === '' || id == null) { valert('未输入谱面ID，已取消操作'); return }\n  const data = await queryChart(id).catch(msgNetErr);\n  console.log(data);\n  if (!data) return;\n  if (!data.charts.length) { msgNoChart(id); return }\n  await readData(data);\n}\nasync function random() {\n  const data = await queryRandom().catch(msgNetErr);\n  console.log(data);\n  if (!data) return;\n  if (!data.charts.length) { msgNoChart('<random>'); return }\n  await readData(data);\n}\nasync function querySong(id) {\n  sendText('等待服务器响应...');\n  const resS = await fetch(getSongsUrlByIndex(id | 0));\n  if (!resS.ok) throw new Error(`${resS.status} ${resS.statusText}`);\n  const song = ((await resS.json()).data || [])[0];\n  if (!song) return { charts: [] };\n  const resC = await fetch(getChartsUrlByUUID(song.id));\n  if (!resC.ok) throw new Error(`${resC.status} ${resC.statusText}`);\n  const charts = (await resC.json()).data || [];\n  return getData(charts.filter(a => a.file), song);\n}\nasync function queryChart(id) {\n  sendText('等待服务器响应...');\n  const resC = await fetch(getChartsUrlByIndex(id | 0));\n  if (!resC.ok) throw new Error(`${resC.status} ${resC.statusText}`);\n  const chart = ((await resC.json()).data || [])[0];\n  if (!chart || !chart.file) return { charts: [] };\n  const resS = await fetch(getSongUrlByUUID(chart.songId));\n  if (!resS.ok) throw new Error(`${resS.status} ${resS.statusText}`);\n  const song = (await resS.json()).data;\n  return getData([chart], song);\n}\nasync function queryRandom() {\n  sendText('等待服务器响应...');\n  const resC = await fetch(getRandomChartUrl());\n  if (!resC.ok) throw new Error(`${resC.status} ${resC.statusText}`);\n  const chart = (await resC.json()).data;\n  const resS = await fetch(getSongUrlByUUID(chart.songId));\n  if (!resS.ok) throw new Error(`${resS.status} ${resS.statusText}`);\n  const song = (await resS.json()).data;\n  return getData([chart], song);\n}\nasync function getData(base, song) {\n  console.log('getData::base', ...base);\n  console.log('getData::song', song);\n  for (const chart of base) {\n    const resA = await fetch(getAssetsUrlByUUID(chart.id));\n    if (!resA.ok) throw new Error(`${resA.status} ${resA.statusText}`);\n    const assets = (await resA.json()).data || [];\n    if (assets.length) console.log('getData::assets', ...assets);\n    chart.assets = assets.map(a => ({ name: a.name, url: a.file }));\n  }\n  return {\n    charts: base.map(a => ({\n      id: a.id,\n      chart: a.file,\n      level: `${a.level}\\u2002Lv.${a.difficulty | 0}`,\n      charter: a.authorName.replace(/\\[PZUser:\\d+:([^\\]]+?)(:PZRT)?\\]/g, '$1'),\n      assets: a.assets // qwq\n    })),\n    composer: song.authorName,\n    illustration: song.illustration,\n    illustrator: song.illustrator,\n    name: song.title,\n    song: song.file\n  };\n}\nasync function readData(data) {\n  const { charts } = data;\n  const urls = [data.song, data.illustration];\n  for (const chart of charts) {\n    if (chart.chart) urls.push(chart.chart);\n    for (const asset of chart.assets) urls.push(asset.url);\n  }\n  const downloader = new Downloader();\n  const dstr = str => decodeURIComponent(str.match(/[^/]+$/)[0]);\n  sendText('获取资源列表...');\n  await downloader.add(urls, ({ url, status, statusText }) => {\n    valert(`资源 '${dstr(url)}' 加载失败\\n错误代码：${status} ${statusText}`);\n  });\n  await downloader.start(uploader.fireProgress.bind(uploader));\n  const xhr4 = async(url, name) => {\n    const data1 = await downloader.getData(url) || new ArrayBuffer(0);\n    uploader.fireLoad({ name }, data1); // 以后添加catch\n  };\n  await xhr4(data.song, dstr(data.song));\n  await xhr4(data.illustration, dstr(data.illustration));\n  for (let i = 0; i < charts.length; i++) {\n    const chart = charts[i];\n    for (const asset of chart.assets) await xhr4(asset.url, asset.name);\n    await xhr4(chart.chart, dstr(chart.chart));\n    const encoder = new TextEncoder();\n    const offset = getChartOffset(chart.id);\n    const infoText = `\n      #\n      Name: ${data.name}\n      Song: ${dstr(data.song)}\n      Picture: ${dstr(data.illustration)}\n      Chart: ${dstr(chart.chart)}\n      Level: ${chart.level}\n      Composer: ${data.composer}\n      Charter: ${chart.charter}\n      Illustrator: ${data.illustrator}\n      Offset: ${offset}\n    `;\n    const info = encoder.encode(infoText);\n    uploader.fireLoad({ name: 'info.txt' }, info.buffer);\n  }\n}\n/**\n * @typedef {(ev:ProgressEvent<XMLHttpRequest>)} XHR\n * @param {string} url\n * @param {XHR} onprogress\n */\nfunction xhr2(url, onprogress = _ => {}) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onprogress = onprogress;\n    xhr.onload = evt => (xhr.status === 200 ? resolve : reject)(evt);\n    xhr.onerror = reject;\n    xhr.send();\n  });\n}\n// async function xhr2(url, onprogress = _ => {}) {\n//   const data = [];\n//   let loaded = 0;\n//   const res = await fetch(url, { method: 'GET' });\n//   if (!res.ok) throw { url, status: res.status, statusText: res.statusText };\n//   const total = Number(res.headers.get('content-length'));\n//   const reader = res.body.getReader();\n//   while (true) {\n//     const { done, value } = await reader.read();\n//     if (done) break;\n//     data.push(value);\n//     loaded += value.length;\n//     onprogress({ loaded, total });\n//   }\n//   return { target: { response: new Blob(data).arrayBuffer() }, loaded, total };\n// }\nasync function getContentLength(url) {\n  try {\n    const res = await fetch(url, { method: 'HEAD' }).catch(() => {\n      throw Object.assign(new Error(), { url, status: 0, statusText: 'Network Error' });\n    });\n    const length = res.headers.get('content-length'); // 踩坑：这里的length是字符串\n    if (length == null) throw new Error('No Content-Length Header');\n    if (res.ok) return Number(length);\n  } catch (ignoreErr) {\n    const res = await fetch(url, { method: 'GET' }).catch(() => {\n      throw Object.assign(new Error(), { url, status: 0, statusText: 'Network Error' });\n    });\n    res.body.cancel();\n    if (!res.ok) throw Object.assign(new Error(), { url, status: res.status, statusText: res.statusText });\n    return Number(res.headers.get('content-length')) || 0;\n  }\n  throw Object.assign(new Error(), { url, status: 0, statusText: 'Unknown Error' });\n}\nfunction Downloader() {\n  this.xhrs = Object.create(null);\n}\nDownloader.prototype.add = function(urls = [], onerror = _ => {}) {\n  return Promise.all(urls.\n    filter(url => !this.xhrs[url]).\n    map(async url => {\n      try {\n        const total = await getContentLength(url);\n        this.xhrs[url] = { event: { loaded: 0, total } };\n      } catch (result) {\n        onerror(result);\n      }\n    }));\n};\nDownloader.prototype.start = function(onprogress = (..._) => {}) {\n  const entries = Object.entries(this.xhrs);\n  return Promise.all(entries.map(([url, xhr]) => xhr2(url, evt => {\n    xhr.event = evt;\n    onprogress(this.loaded, this.total);\n  }).then(evt => xhr.event = evt).catch(evt => xhr.event = evt)));\n};\nDownloader.prototype.getData = function(url) {\n  if (!this.xhrs[url]) return null;\n  const { event } = this.xhrs[url];\n  if (event.loaded >= event.total) return event.target.response;\n  return null;\n};\nObject.defineProperty(Downloader.prototype, 'loaded', { get() {\n  const values = Object.values(this.xhrs);\n  return values.reduce((loaded, xhr) => loaded + xhr.event.loaded, 0);\n} });\nObject.defineProperty(Downloader.prototype, 'total', { get() {\n  const values = Object.values(this.xhrs);\n  return values.reduce((total, xhr) => total + Math.max(xhr.event.loaded, xhr.event.total), 0);\n} });\nfunction getChartOffset(id) {\n  if (id === '2eb9e940-4350-4509-a244-068abd937f44') return -50; // 53\n  // handled up to 174\n  return 0;\n}\n"],"names":["phizone","hook","define","name","description","contents","type","meta","dialogSong","async","num","id","vprompt","valert","data","sendText","resC","fetch","getChartsUrlByIndex","ok","Error","status","statusText","chart","json","file","charts","resS","getSongUrlByUUID","songId","getData","queryChart","catch","msgNetErr","console","log","length","msgNoChart","readData","getRandomChartUrl","queryRandom","uploader","host","x","getSongsUrlByIndex","I","index","j","getChartsUrlByUUID","C","getAssetsUrlByUUID","k","U","ver","str","prompt","toast","err","message","song","filter","a","querySong","base","resA","assets","map","url","level","difficulty","charter","authorName","replace","composer","illustration","illustrator","title","urls","push","asset","downloader","Downloader","dstr","decodeURIComponent","match","add","start","fireProgress","bind","xhr4","data1","ArrayBuffer","fireLoad","i","encoder","TextEncoder","offset","getChartOffset","infoText","info","encode","buffer","this","xhrs","Object","create","prototype","onerror","_","Promise","all","total","res","method","assign","headers","get","Number","body","cancel","getContentLength","event","loaded","result","onprogress","t","entries","xhr","resolve","reject","XMLHttpRequest","open","responseType","onload","evt","send","xhr2","then","target","response","defineProperty","values","reduce","Math","max"],"mappings":"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"}