{"version":3,"file":"filter-CwpVWIKr.js","sources":["../src/plugins/filter.js"],"sourcesContent":["export default hook.define({\n  name: 'Filter',\n  description: 'Apply filter to canvas',\n  contents: [\n    {\n      type: 'config',\n      meta: ['启用滤镜', callback]\n    }\n  ]\n});\n/**\n * @param {HTMLInputElement} checkbox\n * @param {HTMLDivElement} container\n */\nfunction callback(checkbox, container) {\n  const { status } = hook;\n  const input = document.createElement('textarea');\n  Object.assign(input, { placeholder: '在此输入着色器代码' });\n  input.style.cssText += ';width:150px;height:1em;margin-left:10px';\n  input.addEventListener('change', () => {\n    try {\n      const filter0 = new Filter(input.value);\n      hook.filter = (ctx, time, now) => {\n        filter0.apply(ctx.canvas);\n        ctx.drawImage(filter0.getImage(time, now, hook.filterOptions), 0, 0);\n      };\n    } catch (e) {\n      console.error(e);\n      hook.filter = null;\n    }\n  });\n  status.reg('filterText', input, false);\n  container.appendChild(input);\n  checkbox.addEventListener('change', () => {\n    input.classList.toggle('disabled', !checkbox.checked);\n    if (checkbox.checked) input.dispatchEvent(new Event('change'));\n    else hook.filter = null;\n  });\n  status.reg('enableFilter', checkbox);\n}\nconst vsSource = `\n  attribute vec2 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 v_texCoord;\n  void main() {\n    gl_Position = vec4(a_position, 0, 1);\n    v_texCoord = a_texCoord;\n  }\n`;\n// const fsSource = `\n//   precision highp float;\n//   uniform sampler2D u_image;\n//   uniform float u_time;\n//   varying vec2 v_texCoord;\n//   void main() {\n//     vec2 uv = v_texCoord;\n//     vec4 color = texture2D(u_image, uv);\n//   }\n// `;\nfunction Filter(/** @type {string} */fsSource) {\n  this.fsSource = fsSource.replace(/\\xa0/g, ' '); // replace &nbsp; with space (fix copy-paste from web)\n  const canvas = document.createElement('canvas');\n  /** @type {WebGLRenderingContext} */\n  const gl = canvas.getContext('webgl2') || canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n  const program = gl.createProgram();\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vsSource);\n  gl.compileShader(vertexShader);\n  gl.attachShader(program, vertexShader);\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, this.fsSource);\n  gl.compileShader(fragmentShader);\n  if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) throw new SyntaxError(gl.getShaderInfoLog(fragmentShader) || 'Unknown error');\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  gl.useProgram(program);\n  const positionBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, 1, 1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n  const positionLocation = gl.getAttribLocation(program, 'a_position');\n  gl.enableVertexAttribArray(positionLocation);\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n  const texCoordBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]), gl.STATIC_DRAW);\n  const texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n  gl.enableVertexAttribArray(texCoordLocation);\n  gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n  const imageTexture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, imageTexture);\n  // Linear filtering.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  // Clamp to the edge to prevent semi-transparent borders.\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  const imageLocation = gl.getUniformLocation(program, 'u_image');\n  gl.uniform1i(imageLocation, 1);\n  gl.activeTexture(gl.TEXTURE1);\n  gl.bindTexture(gl.TEXTURE_2D, imageTexture);\n  this.canvas = canvas;\n  this.gl = gl;\n  this.program = program;\n}\nFilter.prototype.apply = function(img) {\n  const { gl, canvas } = this;\n  canvas.width = img.width;\n  canvas.height = img.height;\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\n  return canvas;\n};\nFilter.prototype.getImage = function(time, now, obj = {}) {\n  const { gl } = this;\n  const uniformLength = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformLength; i++) {\n    const { type, name } = gl.getActiveUniform(this.program, i);\n    const location = gl.getUniformLocation(this.program, name);\n    switch (name) {\n      case 'u_name':\n        gl.uniform1f(location, time);\n        break;\n      case 'u_now':\n        gl.uniform1f(location, now);\n        break;\n      case 'u_aspect':\n        gl.uniform1f(location, this.canvas.width / this.canvas.height);\n        break;\n      default:\n        if (type === gl.FLOAT) {\n          if (obj[name] !== undefined) gl.uniform1f(location, obj[name]);\n        }\n        // if (type === gl.SAMPLER_2D) {\n        //   const id = this.program.uniforms[name];\n        //   gl.useProgram(this.program);\n        //   gl.activeTexture(gl[`TEXTURE${id}`]);\n        //   gl.uniform1i(location, id);\n        // } else if (type === gl.FLOAT_MAT4) {\n        //   this[name] = location;\n        // }\n    }\n  }\n  gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n  return this.canvas;\n};\n"],"names":["filter","hook","define","name","description","contents","type","meta","checkbox","container","status","input","document","createElement","Object","assign","placeholder","style","cssText","addEventListener","filter0","Filter","value","ctx","time","now","apply","canvas","drawImage","getImage","filterOptions","e","console","error","reg","appendChild","classList","toggle","checked","dispatchEvent","Event","vsSource","fsSource","this","replace","gl","getContext","program","createProgram","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","attachShader","fragmentShader","FRAGMENT_SHADER","getShaderParameter","COMPILE_STATUS","SyntaxError","getShaderInfoLog","linkProgram","useProgram","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","positionLocation","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","texCoordBuffer","texCoordLocation","imageTexture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","imageLocation","getUniformLocation","uniform1i","activeTexture","TEXTURE1","prototype","img","width","height","viewport","texImage2D","RGBA","UNSIGNED_BYTE","obj","uniformLength","getProgramParameter","ACTIVE_UNIFORMS","i","getActiveUniform","location","uniform1f","drawArrays","TRIANGLE_FAN"],"mappings":"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"}